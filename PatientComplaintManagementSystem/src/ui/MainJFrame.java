/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Image;
import static java.time.Clock.system;
import java.util.List;
import java.util.Scanner;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;
import network.Business;
import network.Complaint.ComplaintDirectory;
import network.ConfigureASystem;
import network.Model.User;
import ui.Admin.AdminWorkAreaJPanel;
import ui.HealthCareProfessional.HealthCareProfessionalWorkAreaJPanel;
import ui.Patient.PatientWorkAreaJPanel;
import network.ConfigureASystem;
import network.Enterprise.EnterpriseDirectory;
import network.Medication.MedicationOrder;
import network.Model.Pharmacist;
import network.Model.UserDirectory;

import network.Reports.ReportDirectory;
import ui.Auditor.AuditorWorkAreaJPanel;
import ui.Pharmacist.PharmacistWorkAreaJPanel;

import ui.Specialist.SpecialistWorkAreaJPanel;



/**
 *
 * @author SS
 */
public class MainJFrame extends javax.swing.JFrame {
   UserDirectory userDirectory;
   EnterpriseDirectory enterpriseDirectory;
   ConfigureASystem sys ;

   ReportDirectory reportDirectory;
   Business business;

   ComplaintDirectory complaintDirectory;
   List<MedicationOrder> orders;
    Pharmacist pharmacist;


    /**
     * Creates new form MainJFrame
     */
    public MainJFrame() {
        initComponents();
        sys = new ConfigureASystem();
        
         
        business = sys.configureSystem();
        
        
        userDirectory = business.getUserDirectory();
        enterpriseDirectory = business.getEnterpriseDirectory();

        reportDirectory = business.getReportDirectory();

        complaintDirectory = business.getComplaintDirectory();

        
        cmbRole.removeAllItems();
        cmbRole.addItem("");
        cmbRole.addItem("Admin");
        cmbRole.addItem("Patient");
        cmbRole.addItem("HCP");
        cmbRole.addItem("HCP-S");
        cmbRole.addItem("Auditor");
        cmbRole.addItem("Pharmacist");
        
        
        cmbRole.setSelectedIndex(0);
        setImageInUserProcessContainer();
        System.out.println("Demo data has been set up!");
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        lblUserId = new javax.swing.JLabel();
        txtUserId = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        btnLogin = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();
        lblRole = new javax.swing.JLabel();
        cmbRole = new javax.swing.JComboBox<>();
        userProcessContainer = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblUserId.setText("UserName");

        lblPassword.setText("Password");

        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        btnLogout.setText("Logout");
        btnLogout.setEnabled(false);
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        lblRole.setText("Role");

        cmbRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtPassword)
                        .addComponent(txtUserId, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblUserId, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblPassword, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnLogout, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(26, 26, 26)))
                    .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblRole)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(lblUserId)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtUserId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(lblPassword)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRole)
                    .addComponent(cmbRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(85, 85, 85)
                .addComponent(btnLogin)
                .addGap(34, 34, 34)
                .addComponent(btnLogout)
                .addContainerGap(116, Short.MAX_VALUE))
        );

        jSplitPane1.setLeftComponent(jPanel1);

        userProcessContainer.setLayout(new java.awt.CardLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Welcome To PCM");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        userProcessContainer.add(jLabel1, "card2");

        jSplitPane1.setRightComponent(userProcessContainer);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 604, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // Get user name
        String userId = txtUserId.getText();
        // Get Password
        char[] passwordCharArray = txtPassword.getPassword();
        String password = String.valueOf(passwordCharArray);
        
        String role = (String)cmbRole.getSelectedItem();
        
        
        
        User authenticatedUser = sys.authenticateUser(userId, password, role);
        
        redirectToDashBoard( authenticatedUser);
    }//GEN-LAST:event_btnLoginActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        btnLogout.setEnabled(false);
        txtUserId.setEnabled(true);
        txtPassword.setEnabled(true);
        //txtRole.setEnabled(true);
        btnLogin.setEnabled(true);
        cmbRole.setSelectedIndex(0);

        txtUserId.setText("");
        txtPassword.setText("");
        //txtRole.setText("");

        userProcessContainer.removeAll();
        JPanel blankJP = new JPanel();
        userProcessContainer.add("blank", blankJP);
        CardLayout crdLyt = (CardLayout) userProcessContainer.getLayout();
        crdLyt.next(userProcessContainer);
        setImageInUserProcessContainer();
        
        
    }//GEN-LAST:event_btnLogoutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    private void redirectToDashBoard(User authenticatedUser) {
        if (authenticatedUser == null) {
        // Handle login failure
        System.out.println("Invalid login credentials. Please try again.");
        return;
        }
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
    // Redirect based on role
        switch (authenticatedUser.getRole()) {
            case "Admin":
            // Redirect to Admin Dashboard
            AdminWorkAreaJPanel awajp = new AdminWorkAreaJPanel(userProcessContainer,userDirectory, authenticatedUser, business );
            userProcessContainer.add("AdminWorkAreaJPanel", awajp);
            layout.next(userProcessContainer);
            break;

        case "Patient":
            // Redirect to Patient Dashboard
            PatientWorkAreaJPanel pwajp = new PatientWorkAreaJPanel(userProcessContainer,authenticatedUser, business);
            userProcessContainer.add("PatientWorkAreaJPanel", pwajp);
            layout.next(userProcessContainer);
            break;

        case "HCP":
            // Redirect to Healthcare Professional Dashboard
            HealthCareProfessionalWorkAreaJPanel hcpwajp = new HealthCareProfessionalWorkAreaJPanel(userProcessContainer, complaintDirectory);
            userProcessContainer.add("HealthCareProfessionalWorkAreaJPanel", hcpwajp);
            layout.next(userProcessContainer);
            break;

        case "HCP-S":
            // Redirect to Specialist Dashboard
            SpecialistWorkAreaJPanel swajp = new SpecialistWorkAreaJPanel(userProcessContainer, complaintDirectory);
            userProcessContainer.add("SpecialistWorkAreaJPanel", swajp);
            layout.next(userProcessContainer);
            break;

        case "Pharmacist":
            // Redirect to Pharmacist Dashboard

            PharmacistWorkAreaJPanel pwajpPharma = new PharmacistWorkAreaJPanel(userProcessContainer, authenticatedUser, business);
            userProcessContainer.add("PharmacistWorkAreaJPanel", pwajpPharma);
            layout.next(userProcessContainer);

            break;

        case "Scientist":
            // Redirect to Scientist Dashboard
            //ScientistWorkAreaJPanel swajpResearch = new ScientistWorkAreaJPanel(userProcessContainer);
            //userProcessContainer.add("ScientistWorkAreaJPanel", swajpResearch);
            break;

        case "InsuranceAgent":
            // Redirect to Insurance Agent Dashboard
            //InsuranceAgentWorkAreaJPanel iawajp = new InsuranceAgentWorkAreaJPanel(userProcessContainer);
            //userProcessContainer.add("InsuranceAgentWorkAreaJPanel", iawajp);
            break;

        case "Auditor":
             //Redirect to Auditor Dashboard
            AuditorWorkAreaJPanel awajpAudit = new AuditorWorkAreaJPanel(userProcessContainer,reportDirectory,authenticatedUser, business);
            userProcessContainer.add("AuditorWorkAreaJPanel", awajpAudit);
            layout.next(userProcessContainer);
            break;

        default:
            System.out.println("Invalid role. No dashboard available.");
            return;
            
       
    }
        btnLogin.setEnabled(false);
        btnLogout.setEnabled(true);
        txtUserId.setEnabled(false);
        txtPassword.setEnabled(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnLogout;
    private javax.swing.JComboBox<String> cmbRole;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblRole;
    private javax.swing.JLabel lblUserId;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUserId;
    private javax.swing.JPanel userProcessContainer;
    // End of variables declaration//GEN-END:variables

    private void setImageInUserProcessContainer() {
        
        // Create a new JPanel to hold the image
    JPanel imagePanel = new JPanel();
    imagePanel.setLayout(new BorderLayout()); // Use BorderLayout to center the image

    // Load the image
    ImageIcon imageIcon = new ImageIcon(getClass().getResource("/resources/background.jpg"));
    
    // Optional: Scale the image to fit the container
    Image scaledImage = imageIcon.getImage().getScaledInstance(userProcessContainer.getWidth(), 
                                                               userProcessContainer.getHeight(), 
                                                               Image.SCALE_SMOOTH);
    JLabel imageLabel = new JLabel(new ImageIcon(scaledImage));
    
    // Add the image label to the panel
    imagePanel.add(imageLabel, BorderLayout.CENTER);

    // Add the panel to userProcessContainer with a unique identifier
    userProcessContainer.add("ImagePanel", imagePanel);

    // Show the image panel using CardLayout
    CardLayout layout = (CardLayout) userProcessContainer.getLayout();
    layout.show(userProcessContainer, "ImagePanel");
        
    }
}
