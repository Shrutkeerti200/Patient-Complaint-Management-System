/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Auditor;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import network.Business;
import network.Model.User;
import network.Model.UserDirectory;
import network.Notification.Notification;
import network.Notification.NotificationDirectory;
import network.Reports.Report;
import network.Reports.ReportDirectory;

/**
 *
 * @author SS
 */
public class AuditorWorkAreaJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    ReportDirectory reportDirectory;
    User authenticatedUser;
    String reportCat;
    NotificationDirectory notificationDirectory;

    /**
     * Creates new form AuditorWorkAreaJPanel
     */
    public AuditorWorkAreaJPanel(JPanel userProcessContainer, ReportDirectory reportDirectory  ,User authenticatedUser, Business business) {
        initComponents();
        this.reportDirectory = reportDirectory;
        this.notificationDirectory = business.getNotificationDirectory();
        this.authenticatedUser = authenticatedUser;
        
        lblTitle.setText(authenticatedUser.getUserName());
        
        cmbReportCat.removeAll();
        cmbReportCat.addItem("OrganizationList");
        cmbReportCat.addItem("DrugReport");
        cmbReportCat.addItem("HCPReport");
        cmbReportCat.addItem("PatientReport");
        
        
        
        
        
        /*System.out.println("Reports for subject: OrganizationList");
        System.out.println("--------------------------------------------------");
        for (Report report : filteredReports) {
            System.out.println("Report ID: " + report.getReportID());
            System.out.println("Subject ID: " + report.getSubjectID());
            System.out.println("Subject Name: " + report.getSubjectName());
            System.out.println("Question 1: " + report.getSubjectQ1());
            System.out.println("Question 2: " + report.getSubjectQ2());
            System.out.println("--------------------------------------------------");*/
        
        
        
        
        }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblReportTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        cmbReportCat = new javax.swing.JComboBox<>();
        btnFetch = new javax.swing.JButton();
        btnRequestReport = new javax.swing.JButton();

        tblReportTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ReportId", "SubjectID", "Name", "EnterPriseName", "No.OfUsers"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblReportTable);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Welcom");

        lblTitle.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblTitle.setText("jLabel2");

        cmbReportCat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnFetch.setText("FetchReport");
        btnFetch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFetchActionPerformed(evt);
            }
        });

        btnRequestReport.setText("RequestReport");
        btnRequestReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestReportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(214, 214, 214)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(lblTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(123, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(110, 110, 110))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cmbReportCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnFetch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRequestReport)
                        .addGap(134, 134, 134))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblTitle))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbReportCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFetch)
                    .addComponent(btnRequestReport))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(109, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnFetchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFetchActionPerformed
        // TODO add your handling code here:
        reportCat=(String) cmbReportCat.getSelectedItem();
        ArrayList<Report> filteredReports = reportDirectory.getReportsBySubject(reportCat);
        
        populateTable();
    }//GEN-LAST:event_btnFetchActionPerformed

    private void btnRequestReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestReportActionPerformed
        // TODO add your handling code here:
        
       addNotificationForSelectedCategory();
        
    }//GEN-LAST:event_btnRequestReportActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFetch;
    private javax.swing.JButton btnRequestReport;
    private javax.swing.JComboBox<String> cmbReportCat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblReportTable;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblReportTable.getModel();
    model.setRowCount(0); // Clear the table

    
    System.out.println(reportCat);
    ArrayList<Report> filteredReports = reportDirectory.getReportsBySubject(reportCat);
    // Set dynamic column names
    switch (reportCat) {
        case "DrugReport":
            model.setColumnIdentifiers(new Object[]{"ReportID", "DrugID", "DrugName", "Quantity", "ExpDate"});
            break;

        case "HCPReport":
            model.setColumnIdentifiers(new Object[]{"ReportID", "HealthCareProfessionalID", "Name", "No. of Complaints Handled", "Years of Experience"});
            break;

        case "PatientReport":
            model.setColumnIdentifiers(new Object[]{"ReportID", "PatientID", "Name", "No. of Complaints Registered", "No. of Complaints Resolved"});
            break;

        case "OrganizationList":
            model.setColumnIdentifiers(new Object[]{"ReportID", "OrganizationID", "Name", "EnterpriseName", "No. of Users"});
            break;

        default:
            System.out.println("Invalid subject selected.");
            return;
    }

    // Add rows to the table
    for (Report report : filteredReports) {
        
            model.addRow(new Object[]{
                report.getReportID(),
                report.getSubjectID(),
                report.getSubjectName(),
                report.getSubjectQ1(),
                report.getSubjectQ2()
            });
        }
    }
    
    
    private void addNotificationForSelectedCategory() {
    String selectedCategory = (String) cmbReportCat.getSelectedItem(); // Get the selected category
    if (selectedCategory == null) {
        JOptionPane.showMessageDialog(this, "Please select a category first.", "Warning", JOptionPane.WARNING_MESSAGE);
        return;
    }

    // Get the current timestamp
    String currentTimestamp = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date());

    // Create a new notification
    Notification notification = new Notification(
        "Requested",                        // Status
        currentTimestamp,                   // Timestamp
        authenticatedUser.getRole(),        // FromRole
        "Admin",                            // ToRole
        selectedCategory                    // Regarding
    );

    // Add the notification to the NotificationDirectory
    notificationDirectory.addNewNotification(notification);

    // Confirmation message
    JOptionPane.showMessageDialog(this, "Notification sent for " + selectedCategory + ".", "Notification", JOptionPane.INFORMATION_MESSAGE);
    }

            
        
        
}



