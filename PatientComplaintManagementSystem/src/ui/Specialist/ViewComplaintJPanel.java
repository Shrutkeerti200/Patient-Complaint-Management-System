/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Specialist;

import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import network.Complaint.Complaint;
import network.Complaint.ComplaintDirectory;
import network.Complaint.VitalSigns;

/**
 *
 * @author SS
 */
public class ViewComplaintJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    ComplaintDirectory complaintDirectory;
    Complaint selectedComplaint;

    /**
     * Creates new form ViewComplaintJPanel
     */
    public ViewComplaintJPanel(JPanel userProcessContainer, ComplaintDirectory complaintDirectory, String complaintId) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.complaintDirectory = complaintDirectory;

        btnAddAssessment.setEnabled(false);

        // Fetch the complaint details
        for (Complaint complaint : complaintDirectory.getComplaints()) {
            if (complaint.getComplaintId().equals(complaintId)) {
                this.selectedComplaint = complaint;
                break;
            }
        }

        if (selectedComplaint != null) {
            populateComplaintDetails(); // Populate complaint information
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtComplaintType = new javax.swing.JTextField();
        lblPriorityLevel = new javax.swing.JLabel();
        txtComplaintStatus = new javax.swing.JTextField();
        lblDescription = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        lblComplaintStatus = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        lblDate = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        lblTitle = new javax.swing.JLabel();
        btnViewVitals = new javax.swing.JButton();
        lblComplaintID = new javax.swing.JLabel();
        btnAddAssessment = new javax.swing.JButton();
        lblPatientID = new javax.swing.JLabel();
        txtComplaintID = new javax.swing.JTextField();
        cbStartWorking = new javax.swing.JCheckBox();
        txtPatientID = new javax.swing.JTextField();
        lblPatientName = new javax.swing.JLabel();
        txtPatientName = new javax.swing.JTextField();
        lblPatientAge = new javax.swing.JLabel();
        txtPatientAge = new javax.swing.JTextField();
        lblComplaintType = new javax.swing.JLabel();
        txtPriorityLevel1 = new javax.swing.JTextField();

        lblPriorityLevel.setText("Priority Level:");

        lblDescription.setText("Description:");

        lblComplaintStatus.setText("Complaint Status:");

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblDate.setText("Date Registered:");

        txtDescription.setColumns(20);
        txtDescription.setRows(5);
        jScrollPane1.setViewportView(txtDescription);

        lblTitle.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblTitle.setText("View Complaints");

        btnViewVitals.setText("View Vitals");
        btnViewVitals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewVitalsActionPerformed(evt);
            }
        });

        lblComplaintID.setText("Complaint ID:");

        btnAddAssessment.setText("Add Assessment");
        btnAddAssessment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddAssessmentActionPerformed(evt);
            }
        });

        lblPatientID.setText("Patient ID:");

        cbStartWorking.setText("Start Working");
        cbStartWorking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbStartWorkingActionPerformed(evt);
            }
        });

        lblPatientName.setText("Patient Name:");

        lblPatientAge.setText("Patient Age:");

        lblComplaintType.setText("Complaint Type:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(btnBack)
                        .addGap(250, 250, 250)
                        .addComponent(lblTitle))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(186, 186, 186)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblComplaintID)
                                        .addComponent(lblComplaintType)
                                        .addComponent(lblPriorityLevel)
                                        .addComponent(lblDescription))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtComplaintType, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                                                .addComponent(txtComplaintID)
                                                .addComponent(txtPriorityLevel1))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGap(112, 112, 112)
                                                    .addComponent(cbStartWorking))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGap(56, 56, 56)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(lblPatientName)
                                                        .addComponent(lblPatientID)
                                                        .addComponent(lblPatientAge))
                                                    .addGap(18, 18, 18)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(txtPatientID, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                                        .addComponent(txtPatientName)
                                                        .addComponent(txtPatientAge)))))
                                        .addComponent(jScrollPane1)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(btnAddAssessment)
                                    .addGap(42, 42, 42)
                                    .addComponent(btnViewVitals)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblComplaintStatus)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtComplaintStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                                .addComponent(lblDate)
                                .addGap(18, 18, 18)
                                .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(99, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(lblTitle))
                .addGap(26, 26, 26)
                .addComponent(cbStartWorking)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblComplaintID)
                    .addComponent(lblPatientID)
                    .addComponent(txtComplaintID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientName)
                    .addComponent(lblComplaintType)
                    .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtComplaintType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientAge)
                    .addComponent(lblPriorityLevel)
                    .addComponent(txtPatientAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPriorityLevel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDescription)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblComplaintStatus)
                    .addComponent(lblDate)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtComplaintStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnViewVitals)
                    .addComponent(btnAddAssessment))
                .addGap(122, 122, 122))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

        String role = "HCP-S";

        if (userProcessContainer.getComponent(userProcessContainer.getComponentCount() - 1) instanceof SpecialistWorkAreaJPanel) {
            SpecialistWorkAreaJPanel previousPanel = (SpecialistWorkAreaJPanel) userProcessContainer.getComponent(userProcessContainer.getComponentCount() - 1);
            previousPanel.populateComplaintTable(role); // Ensure populateComplaintTable is accessible
        }
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnViewVitalsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewVitalsActionPerformed
        // TODO add your handling code here:

        VitalSigns vitalSigns = selectedComplaint.getPatient().getVitalSigns();

        if (vitalSigns == null) {
            JOptionPane.showMessageDialog(this, "No vital signs data available.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        ViewVitalsJPanel vvjp = new ViewVitalsJPanel(userProcessContainer, selectedComplaint.getPatient().getVitalSigns());
        userProcessContainer.add("ViewVitalsJPanel", vvjp);

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnViewVitalsActionPerformed

    private void btnAddAssessmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddAssessmentActionPerformed
        // TODO add your handling code here:

        if (!cbStartWorking.isSelected()) {
            JOptionPane.showMessageDialog(this, "Please check 'Start Working' to proceed with the assessment.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        AddAssessmentJPanel aajp = new AddAssessmentJPanel(userProcessContainer, selectedComplaint);
        userProcessContainer.add("AddAssessmentJPanel", aajp);

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnAddAssessmentActionPerformed

    private void cbStartWorkingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbStartWorkingActionPerformed
        // TODO add your handling code here:
        if (cbStartWorking.isSelected()) {
            btnAddAssessment.setEnabled(true);
            btnViewVitals.setEnabled(true);
            txtComplaintStatus.setText("In Progress"); // Set status to "In Progress"
            selectedComplaint.setStatus("In Progress"); // Update complaint status
        } else {
            btnAddAssessment.setEnabled(false);
            btnViewVitals.setEnabled(false);
            txtComplaintStatus.setText("New Complaint"); // Reset status
            selectedComplaint.setStatus("New Complaint");
        }
    }//GEN-LAST:event_cbStartWorkingActionPerformed

    private void populateComplaintDetails() {

        if (selectedComplaint == null) {
            JOptionPane.showMessageDialog(this, "No complaint selected.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        txtComplaintID.setText(selectedComplaint.getComplaintId() != null ? selectedComplaint.getComplaintId() : "");
        txtPatientID.setText(selectedComplaint.getPatient() != null ? selectedComplaint.getPatient().getPatientId() : "");
        txtPatientName.setText(selectedComplaint.getPatient() != null ? selectedComplaint.getPatient().getName() : "");
        txtPatientAge.setText(selectedComplaint.getPatient() != null ? selectedComplaint.getPatient().getAge() : "");
        txtComplaintType.setText(selectedComplaint.getComplaintType() != null ? selectedComplaint.getComplaintType() : "");
        txtComplaintStatus.setText(selectedComplaint.getPriorityLevel() != null ? selectedComplaint.getPriorityLevel() : "");
        txtDescription.setText(selectedComplaint.getDescription() != null ? selectedComplaint.getDescription() : "");
        txtComplaintStatus.setText(selectedComplaint.getStatus() != null ? selectedComplaint.getStatus() : "");
        txtDate.setText(selectedComplaint.getTimestamp() != null ? selectedComplaint.getTimestamp().toString() : "");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddAssessment;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnViewVitals;
    private javax.swing.JCheckBox cbStartWorking;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblComplaintID;
    private javax.swing.JLabel lblComplaintStatus;
    private javax.swing.JLabel lblComplaintType;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblPatientAge;
    private javax.swing.JLabel lblPatientID;
    private javax.swing.JLabel lblPatientName;
    private javax.swing.JLabel lblPriorityLevel;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtComplaintID;
    private javax.swing.JTextField txtComplaintStatus;
    private javax.swing.JTextField txtComplaintType;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextArea txtDescription;
    private javax.swing.JTextField txtPatientAge;
    private javax.swing.JTextField txtPatientID;
    private javax.swing.JTextField txtPatientName;
    private javax.swing.JTextField txtPriorityLevel1;
    // End of variables declaration//GEN-END:variables
}
